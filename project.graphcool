# project: cjl45rf677l5i0154ep715aua
# version: 4

type File @model {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type Location @model {
  addressLine1: String
  addressLine2: String
  city: String
  country: String
  id: ID! @isUnique
  latitude: String
  longitude: String
  name: String
  organization: Organization @relation(name: "OrganizationAddress")
  state: String
  zipcode: String
}

type Medallion @model {
  category: String
  createdAt: DateTime!
  id: ID! @isUnique
  issuedBy: User @relation(name: "UserIssuedMedallions")
  message: String
  ownedBy: User @relation(name: "UserMedallions")
  previousOwnerId: String
  updatedAt: DateTime!
}

type Notification @model {
  createdAt: DateTime!
  id: ID! @isUnique
  message: String
  ownedBy: User @relation(name: "UserNotifications")
  updatedAt: DateTime!
}

type Opportunity @model {
  attendedUsers: [User!]! @relation(name: "AttendedOpportunities")
  createdAt: DateTime!
  description: String
  endTime: DateTime
  goingUsers: [User!]! @relation(name: "GoingOpportunities")
  id: ID! @isUnique
  interestedUsers: [User!]! @relation(name: "InterestedOpportunities")
  location: String
  name: String
  ownedBy: User @relation(name: "UserOpportunities")
  responses: [Response!]! @relation(name: "OpportunityResponses")
  startTime: DateTime
  updatedAt: DateTime!
}

type Organization @model {
  address: Location @relation(name: "OrganizationAddress")
  createdAt: DateTime!
  id: ID! @isUnique
  name: String
  personnel: User @relation(name: "OrgsPersonnel")
  updatedAt: DateTime!
  url: String
}

type Person @model {
  createdAt: DateTime!
  displayName: String
  email: String
  firstName: String
  id: ID! @isUnique
  lastName: String
  ownedBy: User @relation(name: "UsersPersons")
  phone1: String
  phone2: String
  phoneTag1: String
  phoneTag2: String
  updatedAt: DateTime!
}

type Response @model {
  createdAt: DateTime!
  id: ID! @isUnique
  message: String
  opportunity: Opportunity @relation(name: "OpportunityResponses")
  ownedBy: User @relation(name: "UserResponses")
  type: String
  updatedAt: DateTime!
}

type User @model {
  attendedOpportunities: [Opportunity!]! @relation(name: "AttendedOpportunities")
  birthYear: String
  createdAt: DateTime!
  email: String @isUnique
  firstName: String
  goingOpportunities: [Opportunity!]! @relation(name: "GoingOpportunities")
  id: ID! @isUnique
  interestedOpportunities: [Opportunity!]! @relation(name: "InterestedOpportunities")
  lastName: String
  medallions: [Medallion!]! @relation(name: "UserMedallions")
  medallionsIssued: [Medallion!]! @relation(name: "UserIssuedMedallions")
  notifications: [Notification!]! @relation(name: "UserNotifications")
  opportunities: [Opportunity!]! @relation(name: "UserOpportunities")
  organizations: [Organization!]! @relation(name: "OrgsPersonnel")
  password: String
  persons: [Person!]! @relation(name: "UsersPersons")
  phone: String
  responses: [Response!]! @relation(name: "UserResponses")
  updatedAt: DateTime!
  volunteeringLogs: [VolunteeringLog!]! @relation(name: "UserVolunteeringLogs")
}

type VolunteeringLog @model {
  createdAt: DateTime!
  description: String
  endTime: DateTime
  id: ID! @isUnique
  location: String
  ownedBy: User @relation(name: "UserVolunteeringLogs")
  startTime: DateTime
  title: String
  updatedAt: DateTime!
}

type Card @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  number: Int
  suit: String
  code: String
  hands: [Hand!]! @relation(name: "CardsinHand")
}

type Hand @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  rank: Int
  preflopOdds: Float
  code: String
  cards: [Card!]! @relation(name: "CardsinHand")
}